{"ast":null,"code":"var _jsxFileName = \"/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderStreamList() {\n    return this.props.streams.map(({\n      title,\n      description,\n      id\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, description)));\n    });\n  }\n\n  render() {\n    this.renderStreamList();\n    return React.createElement(\"div\", {\n      className: \"ui list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.renderStreamList());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderStreamList","streams","map","title","description","id","render","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,KAAD,KAAgC;AAC5D,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BC,WAA9B,CAFF,CAFF,CADF;AASD,KAVM,CAAP;AAWD;;AAEDE,EAAAA,MAAM,GAAG;AACP,SAAKN,gBAAL;AACA,WAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKA,gBAAL,EAA1B,CAAP;AACD;;AAtBsC;;AAyBzC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB;AAAX,GAAP;AACD,CAFD;;AAGA,eAAeP,OAAO,CACpBa,eADoB,EAEpB;AAAEZ,EAAAA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderStreamList() {\n    return this.props.streams.map(({ title, description, id }) => {\n      return (\n        <div className=\"item\" key={id}>\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <h2>{title}</h2>\n            <div className=\"description\">{description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    this.renderStreamList();\n    return <div className=\"ui list\">{this.renderStreamList()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { streams: Object.values(state.streams) };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchStreams }\n)(StreamList);\n"]},"metadata":{},"sourceType":"module"}