{"ast":null,"code":"var _jsxFileName = \"/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { fetchStream } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui negative button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"\";\n    }\n\n    return \"Are you sure you want to delete \\\"\".concat(this.props.stream.title, \"\\\" stream?\");\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    stream: state.streams[props.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","history","fetchStream","connect","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,aAAa,GAAG;AACd,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AACDC,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACtB,aAAO,EAAP;AACD;;AACD,uDAA2C,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAA7D;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMV,OAAO,CAACe,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AA3BwC;;AA8B3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQX,KAAR,KAAkB;AACxC,SAAO;AAAEM,IAAAA,MAAM,EAAEK,KAAK,CAACC,OAAN,CAAcZ,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAjC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeP,OAAO,CACpBc,eADoB,EAEpB;AAAEf,EAAAA;AAAF,CAFoB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { fetchStream } from \"../../actions\";\nimport { connect } from \"react-redux\";\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  renderActions() {\n    return (\n      <React.Fragment>\n        <button className=\"ui negative button\">Delete</button>\n        <button className=\"ui button\">Cancel</button>\n      </React.Fragment>\n    );\n  }\n  renderContent() {\n    if (!this.props.stream) {\n      return \"\";\n    }\n    return `Are you sure you want to delete \"${this.props.stream.title}\" stream?`;\n  }\n  render() {\n    return (\n      <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={() => history.push(\"/\")}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return { stream: state.streams[props.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream }\n)(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}