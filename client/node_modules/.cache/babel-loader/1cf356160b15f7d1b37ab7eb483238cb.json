{"ast":null,"code":"import streams from \"../apis/streams\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  dispatch({\n    type: \"CREATE_STREAM\",\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  dispatch({\n    type: \"CREATE_STREAM\",\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/actions/index.js"],"names":["streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStreams"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AAC1D,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA3C,GAAD,CAAR;AACD,CAHM;AAIP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA3C,GAAD,CAAR;AACD,CAHM","sourcesContent":["import streams from \"../apis/streams\";\n\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\n\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  dispatch({ type: \"CREATE_STREAM\", payload: response.data });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  dispatch({ type: \"CREATE_STREAM\", payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}