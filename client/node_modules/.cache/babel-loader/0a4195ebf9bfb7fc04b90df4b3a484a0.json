{"ast":null,"code":"var _jsxFileName = \"/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamShow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport flv from \"flv.js\";\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = ref;\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, description));\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    stream: state.streams[props.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","flv","StreamShow","Component","constructor","props","videoRef","ref","componentDidMount","match","params","id","render","stream","title","description","mapStateToProps","state","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,QAAL,GAAgBC,GAAhB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKP,KAAL,CAAWQ,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAHM,+BAIwB,KAAKR,KAAL,CAAWQ,MAJnC;AAAA,UAICC,KAJD,sBAICA,KAJD;AAAA,UAIQC,WAJR,sBAIQA,WAJR;AAKP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAHF,CADF;AAOD;;AArBsC;;AAwBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQZ,KAAR,KAAkB;AACxC,SAAO;AAAEQ,IAAAA,MAAM,EAAEI,KAAK,CAACC,OAAN,CAAcb,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAAjC;AAAV,GAAP;AACD,CAFD;;AAGA,eAAeZ,OAAO,CACpBiB,eADoB,EAEpB;AAAEhB,EAAAA;AAAF,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport flv from \"flv.js\";\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.videoRef = ref;\n  }\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n    const { title, description } = this.props.stream;\n    return (\n      <div>\n        <video />\n        <h1>{title}</h1>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return { stream: state.streams[props.match.params.id] };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchStream }\n)(StreamShow);\n"]},"metadata":{},"sourceType":"module"}