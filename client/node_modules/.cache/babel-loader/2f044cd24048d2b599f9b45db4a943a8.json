{"ast":null,"code":"var _jsxFileName = \"/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { editStream, fetchStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.stream.title);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editStream,\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/components/streams/StreamEdit.js"],"names":["React","connect","editStream","fetchStream","StreamForm","StreamEdit","Component","componentDidMount","props","match","params","id","onSubmit","formValues","console","log","render","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKR,KAAL,CAAWS,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKT,KAAL,CAAWS,MAAX,CAAkBC,KAAxB,CAAP;AACD;;AAZsC;;AAezC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAGA,eAAeV,OAAO,CACpBkB,eADoB,EAEpB;AAAEjB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { editStream, fetchStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n    return <div>{this.props.stream.title}</div>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\nexport default connect(\n  mapStateToProps,\n  { editStream, fetchStream }\n)(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}