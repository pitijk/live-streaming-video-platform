{"ast":null,"code":"import _defineProperty from \"/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport streams from \"../apis/streams\";\nimport history from \"../history\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await streams.post(\"/streams\", _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: \"CREATE_STREAM\",\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: \"FETCH_STREAMS\",\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\" + id);\n  dispatch({\n    type: \"FETCH_STREAM\",\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"/streams/\" + id, formValues);\n  dispatch({\n    type: \"EDIT_STREAM\",\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\" + id);\n  dispatch({\n    type: \"DELETE_STREAM\",\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/piotr/Documents/Web Dev/React/live-streaming-video-platform/client/src/actions/index.js"],"names":["streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,QAC9DP,MAD8D,GACnDO,QAAQ,GAAGC,IADwC,CAC9DR,MAD8D;AAEtE,QAAMS,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,oBAA8BL,UAA9B;AAA0CL,IAAAA;AAA1C,KAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA3C,GAAD,CAAR;AACAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAClD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA3C,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,cAAcE,EAA1B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA1C,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,GAAR,CAAY,cAAcF,EAA1B,EAA8BX,UAA9B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAGH,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAClD,QAAMT,OAAO,CAACuB,MAAR,CAAe,cAAcJ,EAA7B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEc;AAAlC,GAAD,CAAR;AACD,CAHM","sourcesContent":["import streams from \"../apis/streams\";\nimport history from \"../history\";\n\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues, userId });\n  dispatch({ type: \"CREATE_STREAM\", payload: response.data });\n  history.push(\"/\");\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({ type: \"FETCH_STREAMS\", payload: response.data });\n};\n\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\" + id);\n  dispatch({ type: \"FETCH_STREAM\", payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"/streams/\" + id, formValues);\n  dispatch({ type: \"EDIT_STREAM\", payload: response.data });\n  history.push(\"/\");\n};\n\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\" + id);\n  dispatch({ type: \"DELETE_STREAM\", payload: id });\n};\n"]},"metadata":{},"sourceType":"module"}